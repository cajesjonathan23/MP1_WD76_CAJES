function decoded_objects_from_polyline(e,o){length=e.length,dimensions=o.length;let n=0,r=0,t=Long.ZERO,f=0;for(buffer=new Array(dimensions*length,0),bufferCount=0;n<length;){f=null;for(let u=0;u<dimensions;u++){t=Long.ZERO,r=0;do{if(n>=length)break;f=Long.fromNumber(e.charCodeAt(n++)-63),t=t.or(f.and(31)*Math.pow(2,r)),r+=5}while(f>=32);delta=0!=t.and(1)?t.shiftRight(1).not():t.shiftRight(1),lastValue=0==bufferCount?0:buffer[(bufferCount-1)*dimensions+u],buffer[bufferCount*dimensions+u]=Math.round((lastValue+Math.pow(10,-o[u])*delta)*Math.pow(10,o[u]))/Math.pow(10,o[u])}bufferCount+=1}return buffer=buffer,rows=bufferCount,res=[],buffer.each_slice(dimensions,function(e){res.push(e)}),res}function encode_objects_to_polyline(e,o,n,r){rows=e.length,e=e.reduce(function(e,o){return e.concat(o)},[]),buffer=new Array(rows*o*10,0);let t=0,f="";for(let n=0;n<rows*o;n++){for(t=0,t=Math.round(Math.pow(10,r[n%o])*e[n])-(n<o?0:Math.round(Math.pow(10,r[n%o])*e[n-o])),t=t<0?~(t<<1):t<<1;t>=32;)f+=String.fromCharCode(63+(32|31&t)),t>>=5;f+=String.fromCharCode(t+63)}return f}Array.prototype.each_slice=function(e,o){for(let n=0,r=this.length;n<r;n+=e)o.call(this,this.slice(n,n+e))};